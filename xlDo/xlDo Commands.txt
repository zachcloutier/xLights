WARNING:  This is extremely experimental and will likely be replaced with a proper REST
  API in the not to distant future.   Plan accordingly.


Start xLights
    {"cmd:"startxLights", "ifNotRunning":"true|false"}
    
Render all (assumes an open sequence)
    {"cmd":"renderAll"}

Load a sequence
    {"cmd":"loadSequence", "seq":"filename", "promptIssues":"true|false"}
    
Close a sequence
    {"cmd":"closeSequence", "quiet":"true|false", "force":"true|false"}
    
    Quiet when true will return success even if no sequence was open
    This command will fail if the sequence has unsaved changes

Close xLights
    {"cmd":"closexLights", "force":"true|false"}

    if force is not true then it will fail if anything is unsaved

New Sequence    
    {"cmd":"newSequence", "force":"true|false", "mediaFile":"media filename", "durationSecs":30}
    
    If force is not true then this command will fail if there is a sequence already open
    If mediaFile is blank then durationSecs is the length of the animation opened
    If mediaFile is not blank then sequence is created for the audio

Save Sequence
    {"cmd":"saveSequence", "seq":"filename"}

    If seq is blank then it will save the sequence using the name it was opened with

Batch Render Named Sequences
    {"cmd":"batchRender", "seqs":["filename"], "promptIssues":"true|false"}
    
Upload controller configuration
    {"cmd":"uploadController", "ip":"ip address"}

Upload FPP configuration
    {"cmd":"uploadFPPConfig", "ip":"ip address", "udp":"all|proxy|", "models":"true|false", "map":"true|false"}
    
    If models is true then the models are uploaded to FPP
    If map is true then the virtual display map is uploaded to FPP

Upload Sequence to FPP/Falcon V4/Pixel Stick
    {"cmd":"uploadSequence", "ip":"ip address", "media":"true|false", "format":"v1|v2std|v2zlib|v2uncompressedsparse|v2uncompressed|v2stdsparse|v2zlibsparse", "seq":"xsq filename"}

Check sequence
    {"cmd":"checkSequence", "seq":"xsq filename"}

    Open and check a sequence
    
Change Show Folder
    {"cmd":"changeShowFolder", "folder":"show folder", "force":"true|false"}

Open Controller
    {"cmd":"openController", "ip":"ip address"}

    Opens the controller in a browser
    
Get xLights Version
    {"cmd":"getVersion"}

    Gets the xLights version

Export Models CSV
    {"cmd":"exportModels", "filename":"file to create"}

Export Model
    {"cmd":"exportModel", "filename":"file to create", "model":"model to export", "format":"lsp|lorclipboard|lorclipboards5|vixenroutine|hls|eseq|eseqcompressed|avicompressed|aviuncompressed|minleon|gif"}
    
    This assumes the rendered model data is up to date
    
Lights On
    {"cmd":"lightsOn"}

Lights Off
    {"cmd":"lightsOff"}

Play jukebox button
    {"cmd":"playJukebox","button":1}
    
Get Jukebox tooltips
    {"cmd":"getJukeboxButtonTooltips"}

Get Jukebox buttons have effects
    {"cmd":"getJukeboxButtonEffectPresent"}

Get open sequence 
    {"cmd":"getOpenSequence"}

Get E131 Tag
    {"cmd":"getE131Tag"}

